#if !canImport(ObjectiveC)
import XCTest

extension BezierCurveTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BezierCurveTests = [
        ("testCubicCubicIntersectionEndpoints", testCubicCubicIntersectionEndpoints),
        ("testCubicSelfIntersection", testCubicSelfIntersection),
        ("testCubicSelfIntersectionEdgeCase", testCubicSelfIntersectionEdgeCase),
        ("testCubicSelfIntersectionsPerformance1", testCubicSelfIntersectionsPerformance1),
        ("testCubicSelfIntersectionsPerformance2", testCubicSelfIntersectionsPerformance2),
        ("testEquality", testEquality),
        ("testOffsetDistance", testOffsetDistance),
        ("testOffsetTimeDistance", testOffsetTimeDistance),
        ("testOutlineDistance", testOutlineDistance),
        ("testOutlineDistanceAlongNormalDistanceOppositeNormal", testOutlineDistanceAlongNormalDistanceOppositeNormal),
        ("testOutlineQuadraticNormalsParallel", testOutlineQuadraticNormalsParallel),
        ("testOutlineShapesDistance", testOutlineShapesDistance),
        ("testOutlineShapesDistanceAlongNormalDistanceOppositeNormal", testOutlineShapesDistanceAlongNormalDistanceOppositeNormal),
        ("testScaleDistance", testScaleDistance),
        ("testScaleDistanceDegenerate", testScaleDistanceDegenerate),
        ("testScaleDistanceEdgeCase", testScaleDistanceEdgeCase),
    ]
}

extension BoundingBoxHierarchyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BoundingBoxHierarchyTests = [
        ("testBoundingBoxForElement", testBoundingBoxForElement),
        ("testElementIndexToNodeIndex", testElementIndexToNodeIndex),
        ("testIntersectsVisitsEachOnce", testIntersectsVisitsEachOnce),
        ("testLeafNodeToElementIndex", testLeafNodeToElementIndex),
        ("testRoundPowerOfTwo", testRoundPowerOfTwo),
        ("testVisitElementIndexes", testVisitElementIndexes),
    ]
}

extension BoundingBoxTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BoundingBoxTests = [
        ("testArea", testArea),
        ("testCGRect", testCGRect),
        ("testEmpty", testEmpty),
        ("testInitFirstSecond", testInitFirstSecond),
        ("testIntersection", testIntersection),
        ("testLowerAndUpperBounds", testLowerAndUpperBounds),
        ("testOverlaps", testOverlaps),
        ("testUnion", testUnion),
        ("testUnionEmpty1", testUnionEmpty1),
        ("testUnionEmpty2", testUnionEmpty2),
    ]
}

extension CGPointTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CGPointTests = [
        ("testFunctions", testFunctions),
        ("testOperators", testOperators),
    ]
}

extension CubicCurveTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CubicCurveTests = [
        ("testBasicProperties", testBasicProperties),
        ("testBoundingBox", testBoundingBox),
        ("testCompute", testCompute),
        ("testCubicIntersectsLine", testCubicIntersectsLine),
        ("testCubicIntersectsLineCoincident", testCubicIntersectsLineCoincident),
        ("testCubicIntersectsLineEdgeCase", testCubicIntersectsLineEdgeCase),
        ("testDerivative", testDerivative),
        ("testEquatable", testEquatable),
        ("testExtrema", testExtrema),
        ("testInitializerArray", testInitializerArray),
        ("testInitializerIndividualPoints", testInitializerIndividualPoints),
        ("testInitializerLineSegment", testInitializerLineSegment),
        ("testInitializerQuadratic", testInitializerQuadratic),
        ("testInitializerStartEndMidTStrutLength", testInitializerStartEndMidTStrutLength),
        ("testIntersectionsCoincident", testIntersectionsCoincident),
        ("testIntersectionsCubicMaxIntersections", testIntersectionsCubicMaxIntersections),
        ("testLength", testLength),
        ("testNormalCusp", testNormalCusp),
        ("testNormalDegenerate", testNormalDegenerate),
        ("testProject", testProject),
        ("testProjectPerformance", testProjectPerformance),
        ("testReduce", testReduce),
        ("testReduceExtremaCloseby", testReduceExtremaCloseby),
        ("testSetStartEndPoints", testSetStartEndPoints),
        ("testSimple", testSimple),
        ("testSplitAt", testSplitAt),
        ("testSplitContinuous", testSplitContinuous),
        ("testSplitFromTo", testSplitFromTo),
        ("testSplitFromToSameLocation", testSplitFromToSameLocation),
    ]
}

extension DrawTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DrawTests = [
        ("testHSLToRGB", testHSLToRGB),
    ]
}

extension FlatnessTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FlatnessTests = [
        ("testCubicCurve", testCubicCurve),
        ("testLineSegment", testLineSegment),
        ("testQuadraticCurve", testQuadraticCurve),
    ]
}

extension LineSegmentTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LineSegmentTests = [
        ("testBasicProperties", testBasicProperties),
        ("testBoundingBox", testBoundingBox),
        ("testCompute", testCompute),
        ("testComputeRealWordIssue", testComputeRealWordIssue),
        ("testDerivative", testDerivative),
        ("testEquatable", testEquatable),
        ("testExtrema", testExtrema),
        ("testHull", testHull),
        ("testInitializerArray", testInitializerArray),
        ("testInitializerIndividualPoints", testInitializerIndividualPoints),
        ("testIntersectionsCubic", testIntersectionsCubic),
        ("testIntersectionsCubicDegenerate", testIntersectionsCubicDegenerate),
        ("testIntersectionsCubicRealWorldIssue", testIntersectionsCubicRealWorldIssue),
        ("testIntersectionsCubicRootsEdgeCase1", testIntersectionsCubicRootsEdgeCase1),
        ("testIntersectionsCubicRootsEdgeCase2", testIntersectionsCubicRootsEdgeCase2),
        ("testIntersectionsCubicSpecialCase", testIntersectionsCubicSpecialCase),
        ("testIntersectionsDegenerateCubic1", testIntersectionsDegenerateCubic1),
        ("testIntersectionsDegenerateCubic2", testIntersectionsDegenerateCubic2),
        ("testIntersectionsLineAsCurve", testIntersectionsLineAsCurve),
        ("testIntersectionsLineNoOutsideInterval1", testIntersectionsLineNoOutsideInterval1),
        ("testIntersectionsLineNoOutsideInterval2", testIntersectionsLineNoOutsideInterval2),
        ("testIntersectionsLineNoParallel", testIntersectionsLineNoParallel),
        ("testIntersectionsLineNotCoincidentRealWorldData", testIntersectionsLineNotCoincidentRealWorldData),
        ("testIntersectionsLineYesCoincidentBasic", testIntersectionsLineYesCoincidentBasic),
        ("testIntersectionsLineYesCoincidentRealWorldData", testIntersectionsLineYesCoincidentRealWorldData),
        ("testIntersectionsLineYesEdge1", testIntersectionsLineYesEdge1),
        ("testIntersectionsLineYesEdge2", testIntersectionsLineYesEdge2),
        ("testIntersectionsLineYesInsideInterval", testIntersectionsLineYesInsideInterval),
        ("testIntersectionsLineYesLineEnd", testIntersectionsLineYesLineEnd),
        ("testIntersectionsLineYesLineStart", testIntersectionsLineYesLineStart),
        ("testIntersectionsQuadratic", testIntersectionsQuadratic),
        ("testIntersectionsQuadraticSpecialCase", testIntersectionsQuadraticSpecialCase),
        ("testLength", testLength),
        ("testNormal", testNormal),
        ("testProject", testProject),
        ("testReduce", testReduce),
        ("testSelfIntersections", testSelfIntersections),
        ("testSelfIntersects", testSelfIntersects),
        ("testSetStartEndPoints", testSetStartEndPoints),
        ("testSplitAt", testSplitAt),
        ("testSplitFromTo", testSplitFromTo),
    ]
}

extension LockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LockTests = [
        ("testPathPropertyAtomicity", testPathPropertyAtomicity),
    ]
}

extension PathComponentTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathComponentTests = [
        ("testBoundingBox", testBoundingBox),
        ("testEnumeratePoints", testEnumeratePoints),
        ("testEquatable", testEquatable),
        ("testIndexedPathComponentLocation", testIndexedPathComponentLocation),
        ("testIsEqual", testIsEqual),
        ("testLength", testLength),
        ("testOffset", testOffset),
        ("testSplitFromTo", testSplitFromTo),
        ("testStartingEndingPointAt", testStartingEndingPointAt),
    ]
}

extension PathDataTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathDataTests = [
        ("testCorruptedData", testCorruptedData),
        ("testEmpty", testEmpty),
        ("testEmptyData", testEmptyData),
        ("testMultipleClosedPaths", testMultipleClosedPaths),
        ("testMultipleComponentsNoMoveto", testMultipleComponentsNoMoveto),
        ("testMultipleOpenPaths", testMultipleOpenPaths),
        ("testMultipleSinglePoints", testMultipleSinglePoints),
        ("testRectangle", testRectangle),
        ("testSimpleRectangle", testSimpleRectangle),
        ("testSingleClosedPathClosePath", testSingleClosedPathClosePath),
        ("testSingleOpenPath", testSingleOpenPath),
        ("testSinglePointMoveTo", testSinglePointMoveTo),
        ("testSinglePointMoveToCloseSubpath", testSinglePointMoveToCloseSubpath),
        ("testTooling", testTooling),
        ("testWrongMagicNumber", testWrongMagicNumber),
    ]
}

extension PathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathTests = [
        ("testContainsCircleWithHole", testContainsCircleWithHole),
        ("testContainsCornerCase", testContainsCornerCase),
        ("testContainsEdgeCaseParallelDerivative", testContainsEdgeCaseParallelDerivative),
        ("testContainsPath", testContainsPath),
        ("testContainsRealWorldEdgeCase", testContainsRealWorldEdgeCase),
        ("testContainsRealWorldEdgeCase2", testContainsRealWorldEdgeCase2),
        ("testContainsRealWorldEdgeCase3", testContainsRealWorldEdgeCase3),
        ("testContainsSimple1", testContainsSimple1),
        ("testContainsSimple2", testContainsSimple2),
        ("testContainsStar", testContainsStar),
        ("testCrosingsRemovedFourthRealWorldCase", testCrosingsRemovedFourthRealWorldCase),
        ("testCrossingsRemoved", testCrossingsRemoved),
        ("testCrossingsRemovedAnotherRealWorldCase", testCrossingsRemovedAnotherRealWorldCase),
        ("testCrossingsRemovedEdgeCase", testCrossingsRemovedEdgeCase),
        ("testCrossingsRemovedEdgeCaseInnerLoop", testCrossingsRemovedEdgeCaseInnerLoop),
        ("testCrossingsRemovedMulticomponent", testCrossingsRemovedMulticomponent),
        ("testCrossingsRemovedMulticomponentCoincidentEdgeRealWorldIssue", testCrossingsRemovedMulticomponentCoincidentEdgeRealWorldIssue),
        ("testCrossingsRemovedNoCrossings", testCrossingsRemovedNoCrossings),
        ("testCrossingsRemovedRealWorldEdgeCaseMagicNumbers", testCrossingsRemovedRealWorldEdgeCaseMagicNumbers),
        ("testCrossingsRemovedRealWorldInfiniteLoop", testCrossingsRemovedRealWorldInfiniteLoop),
        ("testCrossingsRemovedThirdRealWorldCase", testCrossingsRemovedThirdRealWorldCase),
        ("testDisjointComponentsNesting", testDisjointComponentsNesting),
        ("testDisjointComponentsWindingBackwards", testDisjointComponentsWindingBackwards),
        ("testEncodeDecode", testEncodeDecode),
        ("testEquatable", testEquatable),
        ("testIndexedPathLocation", testIndexedPathLocation),
        ("testInitCGPathEllipse", testInitCGPathEllipse),
        ("testInitCGPathEmpty", testInitCGPathEmpty),
        ("testInitCGPathMultiplecomponents", testInitCGPathMultiplecomponents),
        ("testInitCGPathQuads", testInitCGPathQuads),
        ("testInitCGPathRect", testInitCGPathRect),
        ("testIntersecting", testIntersecting),
        ("testIntersectingSelf", testIntersectingSelf),
        ("testIntersections", testIntersections),
        ("testIntersectsOpenPathEdgeCase", testIntersectsOpenPathEdgeCase),
        ("testIsEqual", testIsEqual),
        ("testNSCoder", testNSCoder),
        ("testOffset", testOffset),
        ("testOffsetDegenerate", testOffsetDegenerate),
        ("testPointIsWithinDistanceOfBoundary", testPointIsWithinDistanceOfBoundary),
        ("testSelfIntersectionsSingleComponentPath", testSelfIntersectionsSingleComponentPath),
        ("testSelfIntersectsEmptyPath", testSelfIntersectsEmptyPath),
        ("testSelfIntersectsMultiComponentPath", testSelfIntersectsMultiComponentPath),
        ("testSelfIntersectsOpenPathEdgeCase", testSelfIntersectsOpenPathEdgeCase),
        ("testSubtracting", testSubtracting),
        ("testSubtractingEdgeCase1", testSubtractingEdgeCase1),
        ("testSubtractingEdgeCase2", testSubtractingEdgeCase2),
        ("testSubtractingEntirelyErased", testSubtractingEntirelyErased),
        ("testSubtractingSelf", testSubtractingSelf),
        ("testSubtractingWinding", testSubtractingWinding),
        ("testSubtractingWindingDirection", testSubtractingWindingDirection),
        ("testSubtractionPerformance", testSubtractionPerformance),
        ("testUnion", testUnion),
        ("testUnionCoincidentEdges1", testUnionCoincidentEdges1),
        ("testUnionCoincidentEdges2", testUnionCoincidentEdges2),
        ("testUnionCoincidentEdges3", testUnionCoincidentEdges3),
        ("testUnionCoincidentEdgesRealWorldTestCase1", testUnionCoincidentEdgesRealWorldTestCase1),
        ("testUnionCoincidentEdgesRealWorldTestCase2", testUnionCoincidentEdgesRealWorldTestCase2),
        ("testUnionRealWorldEdgeCase", testUnionRealWorldEdgeCase),
        ("testUnionSelf", testUnionSelf),
        ("testWindingCountBasic", testWindingCountBasic),
        ("testWindingCountCornerCase", testWindingCountCornerCase),
        ("testWindingCountCornersNoAdjust", testWindingCountCornersNoAdjust),
        ("testWindingCountCornersYesAdjust", testWindingCountCornersYesAdjust),
        ("testWindingCountCusp", testWindingCountCusp),
        ("testWindingCountExactlyParallel", testWindingCountExactlyParallel),
        ("testWindingCountQuadratic", testWindingCountQuadratic),
        ("testWindingCountRealWorldIssue", testWindingCountRealWorldIssue),
    ]
}

extension PolynomialTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PolynomialTests = [
        ("testDegree1", testDegree1),
        ("testDegree2", testDegree2),
        ("testDegree3", testDegree3),
        ("testDegree3RepeatedRoot", testDegree3RepeatedRoot),
        ("testDegree4", testDegree4),
        ("testDegree4RealWorldIssue", testDegree4RealWorldIssue),
        ("testDegree4RepeatedRoots", testDegree4RepeatedRoots),
        ("testDegree5", testDegree5),
        ("testEvaluation", testEvaluation),
    ]
}

extension QuadraticCurveTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__QuadraticCurveTests = [
        ("testBasicProperties", testBasicProperties),
        ("testBoundingBox", testBoundingBox),
        ("testEquatable", testEquatable),
        ("testInitializerStartEndMidT", testInitializerStartEndMidT),
        ("testIntersectionsQuadratic", testIntersectionsQuadratic),
        ("testIntersectionsQuadraticMaxIntersections", testIntersectionsQuadraticMaxIntersections),
        ("testNormalDegenerate", testNormalDegenerate),
        ("testProject", testProject),
        ("testProjectPerformance", testProjectPerformance),
        ("testReduce", testReduce),
        ("testSetStartEndPoints", testSetStartEndPoints),
    ]
}

extension ReversibleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ReversibleTests = [
        ("testReversibleCubicCurve", testReversibleCubicCurve),
        ("testReversibleLineSegment", testReversibleLineSegment),
        ("testReversiblePath", testReversiblePath),
        ("testReversiblePathComponent", testReversiblePathComponent),
        ("testReversibleQuadraticCurve", testReversibleQuadraticCurve),
    ]
}

extension ShapeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ShapeTests = [
        ("testBoundingBox", testBoundingBox),
        ("testEquatable", testEquatable),
        ("testInitializer", testInitializer),
        ("testIntersects", testIntersects),
        ("testShapeIntersection", testShapeIntersection),
    ]
}

extension TransformableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TransformableTests = [
        ("testTransform", testTransform),
        ("testTransformCubicCurve", testTransformCubicCurve),
        ("testTransformLineSegment", testTransformLineSegment),
        ("testTransformPath", testTransformPath),
        ("testTransformPathComponent", testTransformPathComponent),
        ("testTransformQuadraticCurve", testTransformQuadraticCurve),
    ]
}

extension UtilsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UtilsTests = [
        ("testClamp", testClamp),
        ("testDrootsCubicWorldIssue1", testDrootsCubicWorldIssue1),
        ("testDrootsQuadratic", testDrootsQuadratic),
        ("testDrootsQuadraticEdgeCases", testDrootsQuadraticEdgeCases),
        ("testLinesIntersection", testLinesIntersection),
        ("testMap", testMap),
        ("testSortedAndUniqued", testSortedAndUniqued),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BezierCurveTests.__allTests__BezierCurveTests),
        testCase(BoundingBoxHierarchyTests.__allTests__BoundingBoxHierarchyTests),
        testCase(BoundingBoxTests.__allTests__BoundingBoxTests),
        testCase(CGPointTests.__allTests__CGPointTests),
        testCase(CubicCurveTests.__allTests__CubicCurveTests),
        testCase(DrawTests.__allTests__DrawTests),
        testCase(FlatnessTests.__allTests__FlatnessTests),
        testCase(LineSegmentTests.__allTests__LineSegmentTests),
        testCase(LockTests.__allTests__LockTests),
        testCase(PathComponentTests.__allTests__PathComponentTests),
        testCase(PathDataTests.__allTests__PathDataTests),
        testCase(PathTests.__allTests__PathTests),
        testCase(PolynomialTests.__allTests__PolynomialTests),
        testCase(QuadraticCurveTests.__allTests__QuadraticCurveTests),
        testCase(ReversibleTests.__allTests__ReversibleTests),
        testCase(ShapeTests.__allTests__ShapeTests),
        testCase(TransformableTests.__allTests__TransformableTests),
        testCase(UtilsTests.__allTests__UtilsTests),
    ]
}
#endif
